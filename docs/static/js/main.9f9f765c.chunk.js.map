{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifCollectionItem.js","components/GifCollection.js","hooks/useFetchGifs.js","components/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","oldItems","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","item","id","title","images","downsized_medium","GifCollectionItem","className","src","alt","GifCollection","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GitExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACE,uBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAeP,GAAf,mBAA8BO,OAC5CN,EAAc,KAEhBO,QAAQC,IAAI,gBAGZ,UACE,8CACA,uBAAOC,KAAK,OAAOC,MAAOX,EAAYY,SAhBhB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,c,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,gDAEqBC,UAAUH,GAF/B,8DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAU,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAKC,GACTC,MAAOF,EAAKE,MACZV,IAAG,UAAEQ,EAAKG,cAAP,aAAE,EAAaC,iBAAiBZ,QAVpB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAmB,SAAC,GAAgB,IAAfH,EAAc,EAAdA,MAAMV,EAAQ,EAARA,IAGpC,OACI,sBAAKc,UAAU,6CAAf,UACA,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHCO,EAAgB,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAC9B,ECHyB,SAACA,GAExB,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBE,OAZFC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GAEEH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAInB,CAACpB,IAEGqB,EDhBaK,CAAa1B,GAA9BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAIb,OACE,qCACE,oBAAIJ,UAAU,mCAAd,SAAkDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,kBAAf,SACGT,EAAKE,KAAI,SAACkB,GAAD,OACR,cAAC,EAAD,eAAoCA,GAAZA,EAAIhB,aEZzBiB,EAAe,WAC1B,MAAoC5C,mBAAS,CAC3C,UADF,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BACG8C,EAAWpB,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAA0BV,SAAUU,GAAhBA,YChB9BoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9f9f765c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      setCategories((oldItems) => [inputValue, ...oldItems]);\n      setInputValue(\"\");\n    }\n    console.log(\"Submit done\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2>Add Category</h2>\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\n","export const getGifs = async (category) => {\n    const url =\n  `http://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=w3gywAXXGsyA417F6HN4l5Kvj7NwPJfk`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map((item) => {\n      return {\n        id: item.id,\n        title: item.title,\n        url: item.images?.downsized_medium.url,\n      };\n    });\n    return gifs;\n    \n  };","import React from 'react';\n\nexport const GifCollectionItem =({title,url}) =>{\n\n\n    return (\n        <div className='card animate__animated animate__fadeInLeft'>\n        <img src={url} alt={title}/>\n        <p>{title}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport { GifCollectionItem } from \"./GifCollectionItem\";\n\n\nexport const GifCollection = ({ category }) => {\n  const {data, loading} = useFetchGifs(category);\n\n\n\n  return (\n    <>\n      <h3 className='animate__animated animate__flash'>{category}</h3>\n      {loading && <p className='animate__animated animate__flash'>Cargando...</p>}\n      <div className=\"card-collection\">\n        {data.map((img) => (\n          <GifCollectionItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs =(category) =>{\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(() => {\n        getGifs(category)\n        .then(imgs =>{\n\n                setState({\n                    data: imgs,\n                    loading:false\n                })\n        }\n        )\n      }, [category]);\n\n      return state\n    \n}","import React,{useState} from \"react\";\nimport { AddCategory } from \"./AddCategory\";\nimport { GifCollection } from \"./GifCollection\";\n\nexport const GitExpertApp = () => {\n  const [categories, setCategories] = useState([\n    \"himym\"\n  ]);\n\n/*   const handleAdd = () => {\n    setCategories([...categories,'sirenita'])\n  }; */\n  return (\n    <>\n      <h2>GitExpertApp</h2>\n      <AddCategory setCategories={setCategories}/>\n      <hr />\n\n    \n      <ol>\n        {categories.map((item) => \n          <GifCollection key={item} category={item}/>\n        )\n        }\n      </ol>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GitExpertApp } from './components/GitExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GitExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}